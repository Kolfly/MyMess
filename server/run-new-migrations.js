// üìã SCRIPT POUR EX√âCUTER LES NOUVELLES MIGRATIONS
// Script pour ex√©cuter seulement les migrations 002 et 003

const sequelize = require('./database/config/database');
const path = require('path');

async function runNewMigrations() {
  try {
    console.log('üöÄ Ex√©cution des nouvelles migrations...');
    
    // V√©rifier la connexion √† la base
    await sequelize.authenticate();
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie');
    
    // Migration 002: Ajouter colonne status √† conversations
    console.log('‚öôÔ∏è Migration 002: Ajout colonne status...');
    try {
      const migration002 = require('./database/migration/002-add-status-to-conversations.js');
      await migration002.up(sequelize.getQueryInterface(), sequelize.Sequelize);
      console.log('‚úÖ Migration 002 ex√©cut√©e avec succ√®s');
    } catch (error) {
      if (error.message.includes('existe d√©j√†') || error.message.includes('already exists')) {
        console.log('‚è≠Ô∏è Migration 002 d√©j√† appliqu√©e (colonne status existe)');
      } else {
        console.error('‚ùå Erreur migration 002:', error.message);
      }
    }
    
    // Migration 003: Cr√©er table message_reads
    console.log('‚öôÔ∏è Migration 003: Cr√©ation table message_reads...');
    try {
      const migration003 = require('./database/migration/003-create-message-read.js');
      await migration003.up(sequelize.getQueryInterface(), sequelize.Sequelize);
      console.log('‚úÖ Migration 003 ex√©cut√©e avec succ√®s');
    } catch (error) {
      if (error.message.includes('existe d√©j√†') || error.message.includes('already exists')) {
        console.log('‚è≠Ô∏è Migration 003 d√©j√† appliqu√©e (table message_reads existe)');
      } else {
        console.error('‚ùå Erreur migration 003:', error.message);
      }
    }
    
    console.log('üéâ Nouvelles migrations termin√©es !');
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  } finally {
    await sequelize.close();
  }
}

runNewMigrations();